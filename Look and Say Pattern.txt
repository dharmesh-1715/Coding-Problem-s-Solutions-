//C++
class Solution {
  public:
    string countAndSay(int n) {
        if(n==1)return "1";
        
        
        string curr="1";
        
        for(int i=2;i<=n;i++)
        {
            int count=1;
            string next="";
            
            for(int j=1;j<curr.length();j++)
            {
                if(curr[j]==curr[j-1])
                {
                    count++;
                }
                else
                {
                    next+=to_string(count)+curr[j-1];
                    count=1;
                }
            }
            
            next+=to_string(count)+curr.back();
            curr=next;
        }
        return curr;
    }
};

//Java
class Solution {
    public String countAndSay(int n) {
        
        if (n == 1) return "1";
    
    String curr = "1";
    
    for (int i = 2; i <= n; i++) {
        int count = 1;
        StringBuilder next = new StringBuilder();
        
        for (int j = 1; j < curr.length(); j++) {
            if (curr.charAt(j) == curr.charAt(j - 1)) {
                count++;
            } else {
                next.append(count).append(curr.charAt(j - 1));
                count = 1;
            }
        }
        
        next.append(count).append(curr.charAt(curr.length() - 1));
        curr = next.toString();
    }
    
    return curr;   
    }
}
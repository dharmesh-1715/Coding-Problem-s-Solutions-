//C++ code
class Solution {
  public:
    int findLength(vector<int> &color, vector<int> &radius) {
        
        int n=color.size();
        stack<int> s;

        for(int i=0;i<n;i++)
        {
            if(s.size()!=0 and color[i]==color[s.top()] and 
               radius[i]==radius[s.top()])
            {
                s.pop();
            }
            else
            {
                s.push(i);
            }
        }
        
        return s.size();
    }
};

//Java Code
class Solution {
    public int findLength(int[] color, int[] radius) {
        Stack<Integer> st= new Stack<>();
        
        for(int i=0;i<color.length;i++)
        {
            if(!st.isEmpty() && color[i]==color[st.peek()] && radius[i]==radius[st.peek()])
            {
                st.pop();
            }
            else    
            {
                st.push(i);
            }
        }
        return st.size();
    }
}
class Solution {
  public:
    int findSubString(string& str) {
        // Stack Underflow
        
        //Working Brute Force Approach
        // map<char,int> temp;
        // for(int i=0;i<str.length();i++)
        // {
        //     temp[str[i]]++;//for couting the Unique Elements
        // }
        
        // int sizee=temp.size();//which tells us about unique characters 
        // temp.clear();//clearing the map 
        // int len=INT_MAX;//it is for storing the length
        
        // for(int i=0;i<str.length();i++)
        // {
        //     for(int j=i;j<str.length();j++)
        //     {
        //         temp[str[j]]++;
        //         if(sizee==temp.size())
        //         {
        //             len=min(len,j-i+1);
        //             break;
        //         }
        //     }
        //     temp.clear();
        // }
        // return len;
        
        
        
        
        
        //Sliding Window Approach 
        
        map<char,int> temp;
        for(int i=0;i<str.length();i++)//same appraoch to count Unique elements
        {
            temp[str[i]]++;
        }
        
        int sizee=temp.size();
        temp.clear();
        
        int left=0;
        int right=0;
        int len=INT_MAX;
        
        while(right<str.length())
        {
            temp[str[right]]++;//Stroing element in map
            
            while(temp.size()==sizee)//when we gets the substring of all elemnts 
            {
                len=min(len,right-left+1);
                if(temp[str[left]]==1)
                {
                    temp.erase(str[left]);
                }
                else
                {
                    temp[str[left]]--;
                }
                left++;
            }
            right++;//right pointer incremented
        }
        
        return len;//returning minimun length  
    }
};